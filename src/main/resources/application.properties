##############################################################################################
## Spring Server
##############################################################################################
server.servlet.contextPath=/api
server.port=8081
##############################################################################################
# App Properties
##############################################################################################
vader.app.jwtSecret=======================BezKoder=Spring===========================
vader.app.jwtExpirationMs=86400000
##############################################################################################
## File
##############################################################################################
## MULTIPART (MultipartProperties)
# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2KB
# Max file size.
spring.servlet.multipart.max-file-size=200MB
# Max Request Size
spring.servlet.multipart.max-request-size=215MB
# All files uploaded through the REST API will be stored in this directory
file.upload-dir=/temp/upload
##############################################################################################
## Spring DATASOURCE
##############################################################################################
spring.datasource.driver-class-name=org.mariadb.jdbc.Driver
spring.datasource.url=jdbc:mariadb://localhost:3307/nation
spring.datasource.username=root
spring.datasource.password=123456
spring.datasource.hikari.maximum-pool-size=20
spring.batch.job.enabled=false
spring.batch.jdbc.initialize-schema=ALWAYS
##############################################################################################
## Hibernate Configuration
##############################################################################################
# Show or not log for each sql query
spring.jpa.show-sql=true
# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto=update
# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MariaDB103Dialect
#spring.datasource.mapper-locations=classpath:/mapper/**/*.xml
mybatis.mapper-locations=classpath:mapper/*.xml
##############################################################################################
## Redis Config
##############################################################################################
spring.cache.type=redis
spring.redis.host=localhost
spring.redis.port=6379
##############################################################################################
## Logging
##############################################################################################
logging.level.org.hibernate=ERROR
logging.level.root=WARN
logging.level.org.springframework=WARN
#logging.file = /var/tmp/mylog.log